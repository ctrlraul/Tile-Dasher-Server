/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AuthWithGoogle {
  createdAt: Generated<Timestamp>;
  id: string;
  playerId: string;
}

export interface Players {
  createdAt: Generated<Timestamp>;
  email: string;
  id: string;
  lastSeen: Generated<Timestamp>;
  level: Generated<number>;
  name: string;
  role: Generated<string>;
}

export interface Tickets {
  createdAt: Generated<Timestamp>;
  id: string;
  playerId: string;
}

export interface Tracks {
  createdAt: Generated<Timestamp>;
  id: string;
  name: Generated<string>;
  playerId: string;
  plays: Generated<number>;
  tileCoords: string;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  authWithGoogle: AuthWithGoogle;
  players: Players;
  tickets: Tickets;
  tracks: Tracks;
}
